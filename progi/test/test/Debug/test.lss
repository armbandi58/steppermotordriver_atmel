
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000460  000004f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000460  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800106  00800106  000004fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a1c  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000709  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000609  00000000  00000000  00001701  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000fc  00000000  00000000  00001d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045a  00000000  00000000  00001e08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000232  00000000  00000000  00002262  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002494  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e6       	ldi	r30, 0x60	; 96
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 30       	cpi	r26, 0x0C	; 12
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 0c 02 	call	0x418	; 0x418 <main>
  9e:	0c 94 2e 02 	jmp	0x45c	; 0x45c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_7>:
		PORTB |= (1<<STEP);
		_delay_us(500);
		PORTB &= (0<<STEP);
		_delay_us(500);
	}
}
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	2f 93       	push	r18
  b2:	4f 93       	push	r20
  b4:	5f 93       	push	r21
  b6:	6f 93       	push	r22
  b8:	7f 93       	push	r23
  ba:	8f 93       	push	r24
  bc:	9f 93       	push	r25
  be:	af 93       	push	r26
  c0:	bf 93       	push	r27
  c2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
  c6:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  ca:	89 13       	cpse	r24, r25
  cc:	69 c1       	rjmp	.+722    	; 0x3a0 <__vector_7+0x2fa>
  ce:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <merre>
  d2:	81 30       	cpi	r24, 0x01	; 1
  d4:	21 f0       	breq	.+8      	; 0xde <__vector_7+0x38>
  d6:	84 30       	cpi	r24, 0x04	; 4
  d8:	09 f4       	brne	.+2      	; 0xdc <__vector_7+0x36>
  da:	ae c0       	rjmp	.+348    	; 0x238 <__vector_7+0x192>
  dc:	5e c1       	rjmp	.+700    	; 0x39a <__vector_7+0x2f4>
  de:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <token>
  e2:	81 11       	cpse	r24, r1
  e4:	5a c1       	rjmp	.+692    	; 0x39a <__vector_7+0x2f4>
  e6:	88 b1       	in	r24, 0x08	; 8
  e8:	81 60       	ori	r24, 0x01	; 1
  ea:	88 b9       	out	0x08, r24	; 8
  ec:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
  f0:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
  f4:	a0 e0       	ldi	r26, 0x00	; 0
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <howmanystep>
  fc:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <howmanystep+0x1>
 100:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <howmanystep+0x2>
 104:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <howmanystep+0x3>
 108:	84 17       	cp	r24, r20
 10a:	95 07       	cpc	r25, r21
 10c:	a6 07       	cpc	r26, r22
 10e:	b7 07       	cpc	r27, r23
 110:	98 f4       	brcc	.+38     	; 0x138 <__vector_7+0x92>
 112:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <felfuto>
 116:	22 23       	and	r18, r18
 118:	79 f0       	breq	.+30     	; 0x138 <__vector_7+0x92>
 11a:	85 b1       	in	r24, 0x05	; 5
 11c:	81 60       	ori	r24, 0x01	; 1
 11e:	85 b9       	out	0x05, r24	; 5
 120:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <felfuto>
 124:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 128:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <stepper_counter+0x1>
 132:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <stepper_counter>
 136:	1f c0       	rjmp	.+62     	; 0x176 <__vector_7+0xd0>
 138:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <howmanystep>
 13c:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <howmanystep+0x1>
 140:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <howmanystep+0x2>
 144:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <howmanystep+0x3>
 148:	84 17       	cp	r24, r20
 14a:	95 07       	cpc	r25, r21
 14c:	a6 07       	cpc	r26, r22
 14e:	b7 07       	cpc	r27, r23
 150:	90 f4       	brcc	.+36     	; 0x176 <__vector_7+0xd0>
 152:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <felfuto>
 156:	81 11       	cpse	r24, r1
 158:	0e c0       	rjmp	.+28     	; 0x176 <__vector_7+0xd0>
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	15 b8       	out	0x05, r1	; 5
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <felfuto>
 164:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 168:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <stepper_counter+0x1>
 172:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <stepper_counter>
 176:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 17a:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 17e:	88 3e       	cpi	r24, 0xE8	; 232
 180:	23 e0       	ldi	r18, 0x03	; 3
 182:	92 07       	cpc	r25, r18
 184:	20 f4       	brcc	.+8      	; 0x18e <__vector_7+0xe8>
 186:	22 e1       	ldi	r18, 0x12	; 18
 188:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 18c:	37 c0       	rjmp	.+110    	; 0x1fc <__vector_7+0x156>
 18e:	80 3b       	cpi	r24, 0xB0	; 176
 190:	24 e0       	ldi	r18, 0x04	; 4
 192:	92 07       	cpc	r25, r18
 194:	20 f4       	brcc	.+8      	; 0x19e <__vector_7+0xf8>
 196:	2c e0       	ldi	r18, 0x0C	; 12
 198:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 19c:	2f c0       	rjmp	.+94     	; 0x1fc <__vector_7+0x156>
 19e:	88 37       	cpi	r24, 0x78	; 120
 1a0:	25 e0       	ldi	r18, 0x05	; 5
 1a2:	92 07       	cpc	r25, r18
 1a4:	20 f4       	brcc	.+8      	; 0x1ae <__vector_7+0x108>
 1a6:	28 e0       	ldi	r18, 0x08	; 8
 1a8:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ac:	27 c0       	rjmp	.+78     	; 0x1fc <__vector_7+0x156>
 1ae:	80 34       	cpi	r24, 0x40	; 64
 1b0:	26 e0       	ldi	r18, 0x06	; 6
 1b2:	92 07       	cpc	r25, r18
 1b4:	20 f4       	brcc	.+8      	; 0x1be <__vector_7+0x118>
 1b6:	27 e0       	ldi	r18, 0x07	; 7
 1b8:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1bc:	1f c0       	rjmp	.+62     	; 0x1fc <__vector_7+0x156>
 1be:	88 30       	cpi	r24, 0x08	; 8
 1c0:	27 e0       	ldi	r18, 0x07	; 7
 1c2:	92 07       	cpc	r25, r18
 1c4:	20 f4       	brcc	.+8      	; 0x1ce <__vector_7+0x128>
 1c6:	26 e0       	ldi	r18, 0x06	; 6
 1c8:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1cc:	17 c0       	rjmp	.+46     	; 0x1fc <__vector_7+0x156>
 1ce:	80 3d       	cpi	r24, 0xD0	; 208
 1d0:	27 e0       	ldi	r18, 0x07	; 7
 1d2:	92 07       	cpc	r25, r18
 1d4:	20 f4       	brcc	.+8      	; 0x1de <__vector_7+0x138>
 1d6:	25 e0       	ldi	r18, 0x05	; 5
 1d8:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1dc:	0f c0       	rjmp	.+30     	; 0x1fc <__vector_7+0x156>
 1de:	88 39       	cpi	r24, 0x98	; 152
 1e0:	28 e0       	ldi	r18, 0x08	; 8
 1e2:	92 07       	cpc	r25, r18
 1e4:	20 f4       	brcc	.+8      	; 0x1ee <__vector_7+0x148>
 1e6:	24 e0       	ldi	r18, 0x04	; 4
 1e8:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ec:	07 c0       	rjmp	.+14     	; 0x1fc <__vector_7+0x156>
 1ee:	81 36       	cpi	r24, 0x61	; 97
 1f0:	2d e6       	ldi	r18, 0x6D	; 109
 1f2:	92 07       	cpc	r25, r18
 1f4:	18 f0       	brcs	.+6      	; 0x1fc <__vector_7+0x156>
 1f6:	2b e0       	ldi	r18, 0x0B	; 11
 1f8:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 1fc:	a0 e0       	ldi	r26, 0x00	; 0
 1fe:	b0 e0       	ldi	r27, 0x00	; 0
 200:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <howmanystep>
 204:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <howmanystep+0x1>
 208:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <howmanystep+0x2>
 20c:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <howmanystep+0x3>
 210:	84 17       	cp	r24, r20
 212:	95 07       	cpc	r25, r21
 214:	a6 07       	cpc	r26, r22
 216:	b7 07       	cpc	r27, r23
 218:	09 f0       	breq	.+2      	; 0x21c <__vector_7+0x176>
 21a:	bf c0       	rjmp	.+382    	; 0x39a <__vector_7+0x2f4>
 21c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <stepper_counter+0x1>
 220:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <stepper_counter>
 224:	8a e0       	ldi	r24, 0x0A	; 10
 226:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <merre>
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <token>
 230:	86 e0       	ldi	r24, 0x06	; 6
 232:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 236:	b1 c0       	rjmp	.+354    	; 0x39a <__vector_7+0x2f4>
 238:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <token>
 23c:	88 23       	and	r24, r24
 23e:	09 f4       	brne	.+2      	; 0x242 <__vector_7+0x19c>
 240:	ac c0       	rjmp	.+344    	; 0x39a <__vector_7+0x2f4>
 242:	88 b1       	in	r24, 0x08	; 8
 244:	18 b8       	out	0x08, r1	; 8
 246:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 24a:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 24e:	a0 e0       	ldi	r26, 0x00	; 0
 250:	b0 e0       	ldi	r27, 0x00	; 0
 252:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <howmanystep>
 256:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <howmanystep+0x1>
 25a:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <howmanystep+0x2>
 25e:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <howmanystep+0x3>
 262:	84 17       	cp	r24, r20
 264:	95 07       	cpc	r25, r21
 266:	a6 07       	cpc	r26, r22
 268:	b7 07       	cpc	r27, r23
 26a:	98 f4       	brcc	.+38     	; 0x292 <__vector_7+0x1ec>
 26c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <felfuto>
 270:	22 23       	and	r18, r18
 272:	79 f0       	breq	.+30     	; 0x292 <__vector_7+0x1ec>
 274:	85 b1       	in	r24, 0x05	; 5
 276:	81 60       	ori	r24, 0x01	; 1
 278:	85 b9       	out	0x05, r24	; 5
 27a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <felfuto>
 27e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 282:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 286:	01 96       	adiw	r24, 0x01	; 1
 288:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <stepper_counter+0x1>
 28c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <stepper_counter>
 290:	1f c0       	rjmp	.+62     	; 0x2d0 <__vector_7+0x22a>
 292:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <howmanystep>
 296:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <howmanystep+0x1>
 29a:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <howmanystep+0x2>
 29e:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <howmanystep+0x3>
 2a2:	84 17       	cp	r24, r20
 2a4:	95 07       	cpc	r25, r21
 2a6:	a6 07       	cpc	r26, r22
 2a8:	b7 07       	cpc	r27, r23
 2aa:	90 f4       	brcc	.+36     	; 0x2d0 <__vector_7+0x22a>
 2ac:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <felfuto>
 2b0:	81 11       	cpse	r24, r1
 2b2:	0e c0       	rjmp	.+28     	; 0x2d0 <__vector_7+0x22a>
 2b4:	85 b1       	in	r24, 0x05	; 5
 2b6:	15 b8       	out	0x05, r1	; 5
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <felfuto>
 2be:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 2c2:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 2c6:	01 96       	adiw	r24, 0x01	; 1
 2c8:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <stepper_counter+0x1>
 2cc:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <stepper_counter>
 2d0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <stepper_counter>
 2d4:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <stepper_counter+0x1>
 2d8:	88 3e       	cpi	r24, 0xE8	; 232
 2da:	23 e0       	ldi	r18, 0x03	; 3
 2dc:	92 07       	cpc	r25, r18
 2de:	20 f4       	brcc	.+8      	; 0x2e8 <__vector_7+0x242>
 2e0:	22 e1       	ldi	r18, 0x12	; 18
 2e2:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 2e6:	37 c0       	rjmp	.+110    	; 0x356 <__vector_7+0x2b0>
 2e8:	80 3b       	cpi	r24, 0xB0	; 176
 2ea:	24 e0       	ldi	r18, 0x04	; 4
 2ec:	92 07       	cpc	r25, r18
 2ee:	20 f4       	brcc	.+8      	; 0x2f8 <__vector_7+0x252>
 2f0:	2c e0       	ldi	r18, 0x0C	; 12
 2f2:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 2f6:	2f c0       	rjmp	.+94     	; 0x356 <__vector_7+0x2b0>
 2f8:	88 37       	cpi	r24, 0x78	; 120
 2fa:	25 e0       	ldi	r18, 0x05	; 5
 2fc:	92 07       	cpc	r25, r18
 2fe:	20 f4       	brcc	.+8      	; 0x308 <__vector_7+0x262>
 300:	28 e0       	ldi	r18, 0x08	; 8
 302:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 306:	27 c0       	rjmp	.+78     	; 0x356 <__vector_7+0x2b0>
 308:	80 34       	cpi	r24, 0x40	; 64
 30a:	26 e0       	ldi	r18, 0x06	; 6
 30c:	92 07       	cpc	r25, r18
 30e:	20 f4       	brcc	.+8      	; 0x318 <__vector_7+0x272>
 310:	27 e0       	ldi	r18, 0x07	; 7
 312:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 316:	1f c0       	rjmp	.+62     	; 0x356 <__vector_7+0x2b0>
 318:	88 30       	cpi	r24, 0x08	; 8
 31a:	27 e0       	ldi	r18, 0x07	; 7
 31c:	92 07       	cpc	r25, r18
 31e:	20 f4       	brcc	.+8      	; 0x328 <__vector_7+0x282>
 320:	26 e0       	ldi	r18, 0x06	; 6
 322:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 326:	17 c0       	rjmp	.+46     	; 0x356 <__vector_7+0x2b0>
 328:	80 3d       	cpi	r24, 0xD0	; 208
 32a:	27 e0       	ldi	r18, 0x07	; 7
 32c:	92 07       	cpc	r25, r18
 32e:	20 f4       	brcc	.+8      	; 0x338 <__vector_7+0x292>
 330:	25 e0       	ldi	r18, 0x05	; 5
 332:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 336:	0f c0       	rjmp	.+30     	; 0x356 <__vector_7+0x2b0>
 338:	88 39       	cpi	r24, 0x98	; 152
 33a:	28 e0       	ldi	r18, 0x08	; 8
 33c:	92 07       	cpc	r25, r18
 33e:	20 f4       	brcc	.+8      	; 0x348 <__vector_7+0x2a2>
 340:	24 e0       	ldi	r18, 0x04	; 4
 342:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 346:	07 c0       	rjmp	.+14     	; 0x356 <__vector_7+0x2b0>
 348:	81 36       	cpi	r24, 0x61	; 97
 34a:	2d e6       	ldi	r18, 0x6D	; 109
 34c:	92 07       	cpc	r25, r18
 34e:	18 f0       	brcs	.+6      	; 0x356 <__vector_7+0x2b0>
 350:	2b e0       	ldi	r18, 0x0B	; 11
 352:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 356:	a0 e0       	ldi	r26, 0x00	; 0
 358:	b0 e0       	ldi	r27, 0x00	; 0
 35a:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <howmanystep>
 35e:	50 91 02 01 	lds	r21, 0x0102	; 0x800102 <howmanystep+0x1>
 362:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <howmanystep+0x2>
 366:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <howmanystep+0x3>
 36a:	84 17       	cp	r24, r20
 36c:	95 07       	cpc	r25, r21
 36e:	a6 07       	cpc	r26, r22
 370:	b7 07       	cpc	r27, r23
 372:	61 f4       	brne	.+24     	; 0x38c <__vector_7+0x2e6>
 374:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <stepper_counter+0x1>
 378:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <stepper_counter>
 37c:	8a e0       	ldi	r24, 0x0A	; 10
 37e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <merre>
 382:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <token>
 386:	88 b1       	in	r24, 0x08	; 8
 388:	88 60       	ori	r24, 0x08	; 8
 38a:	88 b9       	out	0x08, r24	; 8
 38c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <token>
 390:	81 11       	cpse	r24, r1
 392:	03 c0       	rjmp	.+6      	; 0x39a <__vector_7+0x2f4>
 394:	88 b1       	in	r24, 0x08	; 8
 396:	88 60       	ori	r24, 0x08	; 8
 398:	88 b9       	out	0x08, r24	; 8
 39a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
 39e:	03 c0       	rjmp	.+6      	; 0x3a6 <__vector_7+0x300>
 3a0:	8f 5f       	subi	r24, 0xFF	; 255
 3a2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 3a6:	bf 91       	pop	r27
 3a8:	af 91       	pop	r26
 3aa:	9f 91       	pop	r25
 3ac:	8f 91       	pop	r24
 3ae:	7f 91       	pop	r23
 3b0:	6f 91       	pop	r22
 3b2:	5f 91       	pop	r21
 3b4:	4f 91       	pop	r20
 3b6:	2f 91       	pop	r18
 3b8:	0f 90       	pop	r0
 3ba:	0f be       	out	0x3f, r0	; 63
 3bc:	0f 90       	pop	r0
 3be:	1f 90       	pop	r1
 3c0:	18 95       	reti

000003c2 <PORT_init>:
 3c2:	84 b1       	in	r24, 0x04	; 4
 3c4:	83 62       	ori	r24, 0x23	; 35
 3c6:	84 b9       	out	0x04, r24	; 4
 3c8:	87 b1       	in	r24, 0x07	; 7
 3ca:	81 60       	ori	r24, 0x01	; 1
 3cc:	87 b9       	out	0x07, r24	; 7
 3ce:	8a b1       	in	r24, 0x0a	; 10
 3d0:	8c 63       	ori	r24, 0x3C	; 60
 3d2:	8a b9       	out	0x0a, r24	; 10
 3d4:	15 b8       	out	0x05, r1	; 5
 3d6:	88 b1       	in	r24, 0x08	; 8
 3d8:	88 60       	ori	r24, 0x08	; 8
 3da:	88 b9       	out	0x08, r24	; 8
 3dc:	08 95       	ret

000003de <quarter_step_init>:
 3de:	8b b1       	in	r24, 0x0b	; 11
 3e0:	80 62       	ori	r24, 0x20	; 32
 3e2:	8b b9       	out	0x0b, r24	; 11
 3e4:	08 95       	ret

000003e6 <timer0_init>:

void timer0_init(void){
	//nincs eloosztas
	TCCR0A |= (0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
 3e6:	84 b5       	in	r24, 0x24	; 36
 3e8:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (0<<FOC0A) | (0<<FOC0B) | (0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
 3ea:	85 b5       	in	r24, 0x25	; 37
 3ec:	81 60       	ori	r24, 0x01	; 1
 3ee:	85 bd       	out	0x25, r24	; 37
 3f0:	08 95       	ret

000003f2 <timer2_init>:
void timer2_init(){
	//CTC, 64-es elosztas, 125-ig szamoljon, WGMx1-be 1-es kell, modvalasztas
	//Nincs eloosztas -> CS20 = 1
	//8-as eloosztas -> CS21 = 1
	//1024-es eloosztas -> CS22, CS21, CS20 => 1
	TCCR2A |= (1<<WGM21) | (0<<WGM20);
 3f2:	e0 eb       	ldi	r30, 0xB0	; 176
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	82 60       	ori	r24, 0x02	; 2
 3fa:	80 83       	st	Z, r24
	TCCR2B |= (0<<WGM22) | (0<<CS22) | (0<<CS21) | (1<<CS20);
 3fc:	e1 eb       	ldi	r30, 0xB1	; 177
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	81 60       	ori	r24, 0x01	; 1
 404:	80 83       	st	Z, r24
	TIMSK2 |= (1<<OCIE2A);
 406:	e0 e7       	ldi	r30, 0x70	; 112
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	80 81       	ld	r24, Z
 40c:	82 60       	ori	r24, 0x02	; 2
 40e:	80 83       	st	Z, r24
	//OCR0 = 0x0;
	OCR2A = 30;
 410:	8e e1       	ldi	r24, 0x1E	; 30
 412:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
 416:	08 95       	ret

00000418 <main>:
vb rampedup = 0;
v8 counter = 6;

int main(void)
{
	PORT_init();
 418:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <PORT_init>
	//full_step_init();
	//half_step_init();
	quarter_step_init();
 41c:	0e 94 ef 01 	call	0x3de	; 0x3de <quarter_step_init>
	//eighth_step_init();
	timer0_init();
 420:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <timer0_init>
	timer2_init();
 424:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <timer2_init>

	u8 in_tmp = 0;

	sei();	
 428:	78 94       	sei
	
	while (1) 
    {
		in_tmp = PINC & 0x06;
 42a:	86 b1       	in	r24, 0x06	; 6
 42c:	86 70       	andi	r24, 0x06	; 6
		switch(in_tmp){
 42e:	82 30       	cpi	r24, 0x02	; 2
 430:	19 f0       	breq	.+6      	; 0x438 <main+0x20>
 432:	84 30       	cpi	r24, 0x04	; 4
 434:	59 f0       	breq	.+22     	; 0x44c <main+0x34>
 436:	f9 cf       	rjmp	.-14     	; 0x42a <main+0x12>
			case 2:
				//PORTB |= (1<<LED);
				PORTC &= (0<<ENABLE);
 438:	88 b1       	in	r24, 0x08	; 8
 43a:	18 b8       	out	0x08, r1	; 8
				if(!token)
 43c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <token>
 440:	81 11       	cpse	r24, r1
 442:	f3 cf       	rjmp	.-26     	; 0x42a <main+0x12>
					merre = 1;
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <merre>
 44a:	ef cf       	rjmp	.-34     	; 0x42a <main+0x12>
			 break;
			case 4:
				//PORTB &= (0<<LED);
				//PORTC &= (0<<ENABLE);
				if(token)
 44c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <token>
 450:	88 23       	and	r24, r24
 452:	59 f3       	breq	.-42     	; 0x42a <main+0x12>
					merre = 4;
 454:	84 e0       	ldi	r24, 0x04	; 4
 456:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <merre>
 45a:	e7 cf       	rjmp	.-50     	; 0x42a <main+0x12>

0000045c <_exit>:
 45c:	f8 94       	cli

0000045e <__stop_program>:
 45e:	ff cf       	rjmp	.-2      	; 0x45e <__stop_program>
